import RootLayoutClient from "@/components/layout/RootLayoutClient";
import { LocaleProvider } from "@/contexts/LocaleContext";
import { getAvailableLocales, getGlobalSettings } from "@/data/loaders";
import type { Metadata } from "next";
import { Baloo_2 } from "next/font/google";
import { headers } from "next/headers";

import "./globals.css";

const baloo2 = Baloo_2({
  variable: "--font-baloo",
  subsets: ["latin"],
  display: "swap",
});

export const metadata: Metadata = {
  title: "Just'In Com",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  // Get the Accept-Language header from the request
  const headersList = await headers();
  const acceptLanguage = headersList.get("accept-language") || "";
  const availableLocales = await getAvailableLocales();

  // Parse the Accept-Language header to get the preferred language
  const preferredLanguage = acceptLanguage
    .split(",")[0]
    .split("-")[0]
    .toLowerCase();

  // Set initial locale based on browser language, defaulting to 'fr' if not supported
  const initialLocale = preferredLanguage === 'fr' ? 'fr' : 'en';

  // Fetch global settings for both locales
  const globalSettingsByLocale = await Promise.all(
    ['fr', 'en'].map(async (locale: string) => {
      const settings = await getGlobalSettings(locale);
      return { locale, settings };
    })
  );

  return (
    <LocaleProvider initialLocale={initialLocale}>
      <RootLayoutClient
        globalSettingsByLocale={globalSettingsByLocale}
        availableLocales={availableLocales.map((locale: { code: string }) => locale.code)}
        fontClassName={baloo2.variable}
      >
        {children}
      </RootLayoutClient>
    </LocaleProvider>
  );
}
